// Code generated by MockGen. DO NOT EDIT.
// Source: worker.go

// Package worker is a generated GoMock package.
package worker

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/core/v1"
	v11 "sigs.k8s.io/node-feature-discovery-operator/api/v1"
)

// MockWorkerAPI is a mock of WorkerAPI interface.
type MockWorkerAPI struct {
	ctrl     *gomock.Controller
	recorder *MockWorkerAPIMockRecorder
}

// MockWorkerAPIMockRecorder is the mock recorder for MockWorkerAPI.
type MockWorkerAPIMockRecorder struct {
	mock *MockWorkerAPI
}

// NewMockWorkerAPI creates a new mock instance.
func NewMockWorkerAPI(ctrl *gomock.Controller) *MockWorkerAPI {
	mock := &MockWorkerAPI{ctrl: ctrl}
	mock.recorder = &MockWorkerAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkerAPI) EXPECT() *MockWorkerAPIMockRecorder {
	return m.recorder
}

// SetWorkerConfigMapAsDesired mocks base method.
func (m *MockWorkerAPI) SetWorkerConfigMapAsDesired(ctx context.Context, nfdInstance *v11.NodeFeatureDiscovery, workerCM *v10.ConfigMap) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetWorkerConfigMapAsDesired", ctx, nfdInstance, workerCM)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetWorkerConfigMapAsDesired indicates an expected call of SetWorkerConfigMapAsDesired.
func (mr *MockWorkerAPIMockRecorder) SetWorkerConfigMapAsDesired(ctx, nfdInstance, workerCM interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWorkerConfigMapAsDesired", reflect.TypeOf((*MockWorkerAPI)(nil).SetWorkerConfigMapAsDesired), ctx, nfdInstance, workerCM)
}

// SetWorkerDaemonsetAsDesired mocks base method.
func (m *MockWorkerAPI) SetWorkerDaemonsetAsDesired(ctx context.Context, nfdInstance *v11.NodeFeatureDiscovery, workerDS *v1.DaemonSet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetWorkerDaemonsetAsDesired", ctx, nfdInstance, workerDS)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetWorkerDaemonsetAsDesired indicates an expected call of SetWorkerDaemonsetAsDesired.
func (mr *MockWorkerAPIMockRecorder) SetWorkerDaemonsetAsDesired(ctx, nfdInstance, workerDS interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWorkerDaemonsetAsDesired", reflect.TypeOf((*MockWorkerAPI)(nil).SetWorkerDaemonsetAsDesired), ctx, nfdInstance, workerDS)
}
